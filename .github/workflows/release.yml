name: Build Windows Release


on:
  push:
    tags:
      - 'v*'
jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set variables
        id: vars
        shell: bash
        run: |
          echo "build_dir=${{ github.workspace }}\\build" >> $GITHUB_OUTPUT
          echo "vcpkg_dir=${{ github.workspace }}\\vcpkg" >> $GITHUB_OUTPUT

      - name: Install MinGW
        run: choco install mingw --no-progress

      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git ${{ steps.vars.outputs.vcpkg_dir }}

      - name: Bootstrap vcpkg (Windows)
        run: .\\vcpkg\\bootstrap-vcpkg.bat

      - name: Install dependencies [Windows]
        env:
          VCPKG_DEFAULT_TRIPLET: x64-mingw-static
        run: .\\vcpkg\\vcpkg.exe install --triplet x64-mingw-static

      - name: Configure CMake
        shell: pwsh
        run: |
          cmake -S "${{ github.workspace }}" `
                -B "${{ steps.vars.outputs.build_dir }}" `
                -G "MinGW Makefiles" `
                -DCMAKE_BUILD_TYPE=Release `
                -DCMAKE_TOOLCHAIN_FILE="${{ steps.vars.outputs.vcpkg_dir }}\\scripts\\buildsystems\\vcpkg.cmake" `
                -DVCPKG_TARGET_TRIPLET=x64-mingw-static `
                -DCMAKE_C_COMPILER=gcc `
                -DCMAKE_CXX_COMPILER=g++

      - name: Build
        run: cmake --build ${{ steps.vars.outputs.build_dir }} --config Release

      - name: Package .exe into zip
        run: |
          mkdir dist
          copy "${{ steps.vars.outputs.build_dir }}\\qtg.exe" dist\\qtg.exe
          powershell Compress-Archive dist\\* qtg-windows.zip

      - name: Create GitHub Release and upload asset
        uses: softprops/action-gh-release@v2
        with:
          files: qtg-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
